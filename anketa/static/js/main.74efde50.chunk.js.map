{"version":3,"sources":["_types/index.js","_constants/index.js","_store/notices.js","_api/index.js","components/PrivateRoute.js","components/GlobalNotifications.js","components/GlobalConfirms.js","components/GlobalNotices.js","App.js","index.js","_services/user.service.js","components/LazyComponent.js","_store/user.js","_api/mock-server.js","_helpers/auth-agent.js","_store/partners/index.js","_store/clients.js","_helpers/mock-server.js","_store/applications.js","_store/auth.js","_store/index.js"],"names":["__webpack_require__","d","__webpack_exports__","CLEAR","ERROR","LOADING","SUCCESS","SET_REQUEST_STATUS","SET_LAST_REQUEST","USER","SET_USER","SET_USERNAME","SET_USERFULLNAME","REMOVE_USER","AUTH","SET_AUTH","UNSET_AUTH","TOKEN_EXPIRED","USER_LOGOUT","PARTNERS","ADD_PARTNER","CLIENTS","ADD_CLIENT","NOTICES","ADD_NOTIFICATION","REMOVE_NOTIFICATION","ADD_CONFIRM","REMOVE_CONFIRM","SET_PARAMS","SET_FILTERS","APPLICATIONS","FETCH_APPLICATIONS","ADD_APPLICATION","EDIT_APPLICATION","REMOVE_APPLICATION","DELAY_NOT_PASSED","ALREADY_FETCHED","STATUS_DRAFT","STATUS_PENDING","STATUS_WRONG","STATUS_SUCCESS","SORT_CREATED_AT","SORT_EDITED_AT","SORT_DESC","FILTER_DAY_TODAY","BAD_CREDENTIALS","SERVER_ERROR","NO_DATA","namespace","initState","notifications","confirms","notices","state","arguments","length","undefined","_ref","type","payload","indexOf","replace","newState","Object","assign","id","Date","getTime","toString","concat","_home_u9119_Desktop_projs_alfa_anketa_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","index","findIndex","n","splice","_home_u9119_Desktop_projs_alfa_anketa_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onCancelClick","rejection","onConfirmClick","resolving","pushNotification","dispatch","removeNotification","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_services_user_service__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","user","localStorage","getItem","JSON","parse","token","token_type","access_token","lastActivity","client","axios","create","baseURL","headers","Content-Type","Authorization","interceptors","response","use","error","status","console","log","userService","logout","credentials","window","atob","authdata","split","login","then","Promise","reject","connect","auth","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","render","props","authenticated","Redirect","to","pathname","from","location","GlobalNotifications","this","_this","offsets","left","right","className","style","top","zIndex","map","_ref$message","message","_ref$options","options","pos","stickTo","autoCloseDelay","notification","notification_default","ref","r","key","visible","offset","onCloseTimeout","closeNotification","onCloserClick","root","offsetHeight","React","_ref$confirms","confirm","prompt_confirmation_modal_default","GlobalNotices","components_GlobalConfirms","components_GlobalNotifications","LoginPage","lazy","all","e","bind","NotFound","DashboardPage","App","react","fallback","Switch","path","exact","LazyComponent","components_PrivateRoute","components_GlobalNotices","ReactDOM","es","store","HashRouter","basename","process","src_App","document","getElementById","reason","removeItem","defaults","common","title","_callee","username","password","_home_u9119_Desktop_projs_alfa_anketa_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","mockAuth","checkPassword","catch","handleError","handleSuccess","btoa","setItem","stringify","firstName","abrupt","sent","stop","res","data","_ref$response","errors","error_description","badCredentials","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","fetchUserData","_types__WEBPACK_IMPORTED_MODULE_0__","_api__WEBPACK_IMPORTED_MODULE_1__","request","lastRequest","user_full_name","_ref2","_ref2$light","light","_ref2$forced","forced","getState","resolve","_getState$user","Error","get","_ref3","err","mockUser","localStorageNaming","getUsers","users","lastName","_unused","getUser","find","getAuthDatas","authData","_unused2","created","getAuthData","setAuthData","datas","browser","navigator","userAgent","push","sendPassword","rej","parseInt","Math","random","substr","encodeURI","setTimeout","resendPassword","_this2","_this3","objectSpread","toISOString","join","list","params","total","limit","sortBy","sortOrder","filters","search","day","reducers","combineReducers","routing","routerReducer","partners","clients","applications","toConsumableArray","v","newList","slice","createStore","composeWithDevTools","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.74efde50.chunk.js","sourcesContent":["export const CLEAR    = 'CLEAR';\nexport const ERROR    = 'ERROR';\nexport const LOADING  = 'LOADING';\nexport const SUCCESS  = 'SUCCESS';\n\nexport const SET_REQUEST_STATUS = 'SET_REQUEST_STATUS';\nexport const SET_LAST_REQUEST = 'SET_LAST_REQUEST';\n\nexport const USER = 'USER/';\nexport const SET_USER = 'SET_USER';\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_USERFULLNAME = 'SET_USERFULLNAME';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const AUTH = 'AUTH/';\nexport const SET_AUTH = 'SET_AUTH';\nexport const UNSET_AUTH = 'UNSET_AUTH';\nexport const TOKEN_EXPIRED = 'TOKEN_EXPIRED';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\n\nexport const PARTNERS     = 'PARTNERS/';\nexport const ADD_PARTNER  = 'ADD_PARTNER';\n\nexport const CLIENTS    = 'CLIENTS/';\nexport const ADD_CLIENT = 'ADD_CLIENT';\n\nexport const NOTICES              = 'NOTICES/';\nexport const NOTIFICATIONS        = 'NOTIFICATIONS/';\nexport const ADD_NOTIFICATION     = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION  = 'REMOVE_NOTIFICATION';\nexport const ADD_CONFIRM          = 'ADD_CONFIRM';\nexport const REMOVE_CONFIRM       = 'REMOVE_CONFIRM';\n\nexport const SET_TOTAL    = 'SET_TOTAL';\nexport const SET_LIMITS   = 'SET_LIMITS';\nexport const SET_PARAMS   = 'SET_PARAMS';\nexport const SET_FILTERS  = 'SET_FILTERS';\n\nexport const APPLICATIONS         = 'APPLICATIONS/';\nexport const FETCH_APPLICATIONS   = 'FETCH_APPLICATIONS';\nexport const ADD_APPLICATION      = 'ADD_APPLICATION';\nexport const EDIT_APPLICATION     = 'EDIT_APPLICATION';\nexport const REMOVE_APPLICATION   = 'REMOVE_APPLICATION';\n\nexport const DELAY_NOT_PASSED = 'DELAY HAVE NOT PASSED';\nexport const ALREADY_FETCHED  = 'REQUEST ALREADY FETCHED';\n\nexport const STATUS_DRAFT   = 'STATUS_DRAFT';\nexport const STATUS_PENDING = 'STATUS_PENDING';\nexport const STATUS_WRONG   = 'STATUS_WRONG';\nexport const STATUS_SUCCESS = 'STATUS_SUCCESS';\n\nexport const SORT_CREATED_AT  = 'SORT_CREATED_AT';\nexport const SORT_EDITED_AT   = 'SORT_EDITED_AT';\nexport const SORT_DESC  = 'SORT_DESC';\nexport const SORT_ASC   = 'SORT_ASC';\n\nexport const FILTER_DAY_TODAY   = 'FILTER_DAY_TODAY';\n\nexport const ORDER_STATUS_CONTINUE  = 'ORDER_STATUS_CONTINUE';\nexport const ORDER_STATUS_ERROR_1   = 'ORDER_STATUS_ERROR_1';\n\nexport const TYPE_DANGER    = 'TYPE_DANGER';\nexport const TYPE_SUCCESS   = 'TYPE_SUCCESS';\nexport const TYPE_PRIMARY   = 'TYPE_PRIMARY';\nexport const TYPE_DEFAULT   = 'TYPE_DEFAULT';\nexport const TYPE_WARNING   = 'TYPE_WARNING';\nexport const TYPE_SECONDARY = 'TYPE_SECONDARY';\n\nexport const LIST_VIEW_AUTO_RELOAD_STORAGE_NAME = 'LIST_VIEW_AUTO_RELOAD_STORAGE_NAME';\n","export const BAD_CREDENTIALS = 'Bad credentials';\nexport const SERVER_ERROR = 'Server Error';\nexport const NO_DATA = 'no data';\n","import {ADD_CONFIRM, ADD_NOTIFICATION, NOTICES, REMOVE_CONFIRM, REMOVE_NOTIFICATION} from \"../_types\";\n\nconst namespace = NOTICES;\nconst initState = {\n\tnotifications: [],\n\tconfirms: [\n\t\t// {\n\t\t// \tid: '0',\n\t\t// \tconfirmButtonLabel: 'Да',\n\t\t// \tcancelButtonLabel: 'Нет',\n\t\t// \theader: '',\n\t\t// \tisProcessing: false,\n\t\t// \tvisible: true,\n\t\t// \ttext: <Label>Привет</Label>,\n\t\t// \tonCancelClick() {},\n\t\t// \tonConfirmClick() {}\n\t\t// },\n\t\t// {\n\t\t// \tid: '1',\n\t\t// \tconfirmButtonLabel: 'Да',\n\t\t// \tcancelButtonLabel: 'Нет',\n\t\t// \theader: '',\n\t\t// \tisProcessing: false,\n\t\t// \tvisible: true,\n\t\t// \ttext: <Label>Good morning</Label>,\n\t\t// \tonCancelClick() {},\n\t\t// \tonConfirmClick() {}\n\t\t// }\n\t]\n};\n\nexport default function notices(state = initState, {type, payload}) {\n\t// CHECK NAMESPACE\n\tif (type.indexOf(namespace)!==0) return state;\n\ttype = type.replace(namespace, '');\n\n\tif (type === ADD_NOTIFICATION) {\n\t\tconst newState = Object.assign({}, state);\n\t\tpayload.id = new Date().getTime().toString() + newState.notifications.length;\n\t\tnewState.notifications =  [...newState.notifications, payload];\n\t\treturn newState;\n\t}\n\n\tif (type === REMOVE_NOTIFICATION) {\n\t\tconst notifications = Object.assign([], state.notifications);\n\t\tconst index = notifications.findIndex(n => n.id === payload);\n\t\tif (index!==-1) {\n\t\t\tnotifications.splice(index,1);\n\t\t}\n\t\treturn {...state, notifications};\n\t}\n\t\n\tif (type === ADD_CONFIRM) {\n\t\tconst newState = Object.assign({}, state);\n\t\tpayload.id = new Date().getTime().toString() + newState.confirms.length;\n\t\tpayload.onCancelClick = () => { payload.rejection(payload.id) };\n\t\tpayload.onConfirmClick = () => { payload.resolving(payload.id) };\n\t\tnewState.confirms =  [...newState.confirms, payload];\n\t\treturn newState;\n\t}\n\t\n\tif (type === REMOVE_CONFIRM) {\n\t\tconst confirms = Object.assign([], state.confirms);\n\t\tconst index = confirms.findIndex(n => n.id === payload);\n\t\tif (index!==-1) {\n\t\t\tconfirms.splice(index,1);\n\t\t}\n\t\treturn {...state, confirms};\n\t}\n\t\n\treturn {...state};\n};\n\nexport const pushNotification = payload => dispatch => {\n\tdispatch({type: namespace + ADD_NOTIFICATION, payload});\n};\n\nexport const removeNotification = payload => dispatch => {\n\tdispatch({type: namespace + REMOVE_NOTIFICATION, payload});\n};\n\nexport const pushConfirm = payload => dispatch => {\n\tdispatch({type: namespace + ADD_CONFIRM, payload});\n};\n\nexport const removeConfirm = payload => dispatch => {\n\tdispatch({type: namespace + REMOVE_CONFIRM, payload})\n};\n","import axios from 'axios';\nimport {userService} from '../_services/user.service'\nimport {TOKEN_EXPIRED} from \"../_types\";\n\nconst user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : false;\nconst token = user ? user.token_type + ' ' + user.access_token : '';\nconst lastActivity = localStorage.getItem('last-activity') ? new Date(localStorage.getItem('last-activity')) : new Date(0);\nconst baseURLS = {\n  'development': 'http://localhost:8080/api',\n  'production': '/api',\n};\nconst client =  axios.create({\n  baseURL: baseURLS[process.env.NODE_ENV] || 'http://localhost:8080/api',\n\theaders: {\n\t\t'Content-Type': 'application/json',\n    'Authorization': token\n\t}\n});\n\nclient.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error && error.response && error.response.status === 401) {\n    console.log(token);\n    console.log(\"token expired\");\n    if (new Date() - lastActivity.getTime() > 30 * 60 * 1000) {\n      userService.logout(TOKEN_EXPIRED);\n    }\n    else if (user){\n      const credentials = window.atob(user.authdata).split(':');\n      userService.login(credentials[0], credentials[1]).then(user => console.log(user));\n    }\n  }\n  return Promise.reject(error);\n});\n\nexport default client;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, auth,...rest }) => (\n  <Route {...rest} render={props => (\n    auth.authenticated\n      ? <Component {...props} />\n      : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n  )} />\n);\n\nfunction mapStateToProps(state) {\n  return {auth: state.auth};\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Notification from \"arui-feather/notification\";\nimport {pushNotification, removeNotification} from \"../_store/notices\";\n\nclass GlobalNotifications extends React.Component {\n\n\tcloseNotification(id) {\n\t\tthis.props.removeNotification(id);\n\t}\n\n\trender() {\n\t\tconst notifications = this.props.notifications;\n\t\tconst offsets = {left: 0, right: 0};\n\t\treturn (\n\t\t\t<div className=\"global-notifications p-fixed color-white\" style={{top:0, left: 0, zIndex: 10000}}>\n\t\t\t\t{notifications.map(({id, message = '', options = {}}, index) => {\n\t\t\t\t\tconst pos = options.stickTo ? options.stickTo : 'right';\n\t\t\t\t\toptions.autoCloseDelay = options.autoCloseDelay ? options.autoCloseDelay : 5000;\n\t\t\t\t\tconst notification = (\n\t\t\t\t\t\t<Notification\n\t\t\t\t\t\t\tref={r => {return notifications[index] ? notifications[index].ref = r : ''}}\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\tvisible={ true }\n\t\t\t\t\t\t\toffset={ offsets[pos] + 10 }\n\t\t\t\t\t\t\tstickTo={pos}\n\t\t\t\t\t\t\tonCloseTimeout={ () => { this.closeNotification(id) }}\n\t\t\t\t\t\t\tonCloserClick={ () => { this.closeNotification(id) }}\n\t\t\t\t\t\t\t{...options}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{message}\n\t\t\t\t\t\t</Notification>\n\t\t\t\t\t);\n\t\t\t\t\toffsets[pos] += notifications[index].ref ? notifications[index].ref.root.offsetHeight + 10 : 0;\n\t\t\t\t\treturn notification;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t};\n}\n\nexport default connect(\n\tstate => ({\n\t\tnotifications: state.notices.notifications\n\t}),\n\tdispatch => ({\n\t\tremoveNotification: (payload) => {\n\t\t\tdispatch(removeNotification(payload));\n\t\t},\n\t\tpushNotification: notification => dispatch(pushNotification(notification))\n\t})\n)(GlobalNotifications);\n","import React from 'react';\nimport PromptConfirmationModal from \"arui-private/prompt-confirmation-modal\";\nimport {connect} from \"react-redux\";\n\nfunction GlobalConfirms({confirms=[]}) {\n  \n  return (\n    <div className=\"global-confirms\">\n      {\n        confirms.map(confirm => (\n          <PromptConfirmationModal\n            key={ confirm.id }\n            {...confirm}\n          />\n        ))\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    confirms: state.notices.confirms\n  }\n}\n\nexport default connect(mapStateToProps)(GlobalConfirms);\n","import React from 'react';\nimport GlobalNotifications from \"./GlobalNotifications\";\nimport GlobalConfirms from \"./GlobalConfirms\";\n\nfunction GlobalNotices() {\n  return (\n    <div className=\"global-notices\">\n      <GlobalConfirms/>\n      <GlobalNotifications/>\n    </div>\n  )\n}\n\nexport default GlobalNotices;\n","import React, {lazy, Suspense} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute';\nimport {userService} from './_services/user.service';\nimport LazyComponent from \"./components/LazyComponent\";\nimport {USER_LOGOUT} from \"./_types\";\nimport GlobalNotices from \"./components/GlobalNotices\";\n\nconst LoginPage = lazy(() => import(\"./pages/LoginPage/LoginPage\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\nconst DashboardPage = lazy(() => import(\"./pages/DashboardPage/DashboardPage\"));\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/login\" exact component={LazyComponent(LoginPage)}/>\n\t\t\t\t\t<Route path=\"/logout\" render={() => {\n\t\t\t\t\t\tuserService.logout(USER_LOGOUT);\n\t\t\t\t\t\treturn <Redirect to=\"/dashboard\"/>;\n\t\t\t\t\t}}/>\n\t\t\t\t\t<PrivateRoute path=\"/dashboard\" component={DashboardPage}/>\n\t\t\t\t\t<Route path=\"/\" exact render={()=> <Redirect to=\"/dashboard\"/> }/>\n\t\t\t\t\t<Route path='/404' exact component={LazyComponent(NotFound)} />\n\t\t\t\t\t<Redirect from='*' to='/404' />\n\t\t\t\t</Switch>\n\t\t\t</Suspense>\n\t\t\t<GlobalNotices/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './_store';\n\nimport 'bootstrap-4-grid/css/grid.min.css'\nimport './index.css';\nimport './assets/css/main.css';\nimport 'element-theme-default';\n\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n\t, document.getElementById('root'));\n// serviceWorker.register();\n","import client from '../_api'\nimport {BAD_CREDENTIALS, NO_DATA} from '../_constants'\nimport store from '../_store';\nimport {\n  AUTH,\n  REMOVE_USER,\n  SET_AUTH, SET_USERFULLNAME,\n  SET_USERNAME,\n  TOKEN_EXPIRED,\n  UNSET_AUTH,\n  USER, USER_LOGOUT,\n} from '../_types'\nimport {pushNotification} from \"../_store/notices\";\nimport {mockAuth} from \"../_api/mock-server\";\n\nexport const userService = {\n  login,\n  logout\n};\n\n\nasync function login(username, password) {\n  return await mockAuth.checkPassword(username, password)\n    .catch(handleError)\n    .then(handleSuccess)\n    .then(user => {\n      if (user) {\n        console.log(user);\n        user.authdata = window.btoa(username + ':' + password);\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('user_full_name', user.firstName);\n        client.defaults.headers['Authorization'] = user.token_type + ' ' + user.access_token;\n        store.dispatch({type: AUTH+SET_AUTH});\n        store.dispatch({type: USER+SET_USERNAME, payload: username});\n        store.dispatch({type: USER+SET_USERFULLNAME, payload: user.firstName});\n      }\n      return user;\n    });\n}\n\nfunction logout(reason) {\n  console.log('logout');\n  localStorage.removeItem('user');\n  delete client.defaults.headers.common['Authorization'];\n  delete client.defaults.headers['Authorization'];\n  store.dispatch({ type: USER + REMOVE_USER });\n  store.dispatch({ type: AUTH + UNSET_AUTH  });\n  if (reason === TOKEN_EXPIRED) {\n    store.dispatch(pushNotification({message: \"Время сессии истекло\", options: {status: 'error', title: 'Выход из системы'}}))\n  }\n  if (reason === USER_LOGOUT) {\n    store.dispatch(pushNotification({message: \"Выход из системы выполнен успешно\", options: {status: 'ok', title: 'Выход из системы'}}))\n  }\n}\n\nfunction handleSuccess(res) {\n  if (res.data) return res.data;\n  return Promise.reject({data: NO_DATA})\n}\n\nfunction handleError({response: {status, data}}) {\n  const errors = {};\n  if(status === 400 && data.error_description === BAD_CREDENTIALS)\n    errors.badCredentials = {status, data: BAD_CREDENTIALS};\n  return Promise.reject(errors)\n}\n","import {Suspense} from 'react'\nimport React from 'react'\n\nexport default function LazyComponent(Component) {\n  return props => (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Component key=\"Component\" {...props}/>\n    </Suspense>\n  );\n}\n","import {\n  ALREADY_FETCHED,\n  CLEAR,\n  DELAY_NOT_PASSED,\n  ERROR,\n  LOADING,\n  REMOVE_USER,\n  SET_REQUEST_STATUS,\n  SET_USER, SET_USERFULLNAME,\n  SET_USERNAME,\n  SUCCESS,\n  USER,\n} from '../_types'\nimport client from '../_api'\n\nconst namespace = USER;\nconst REQUEST_DELAY = 30 * 1000;\nconst initState = {\n  request: CLEAR,\n  lastRequest: null,\n  user: {},\n  username: localStorage.getItem('user') ? window.atob(JSON.parse(localStorage.getItem('user')).authdata).split(':')[0] : '',\n  user_full_name: localStorage.getItem('user_full_name'),\n};\n\nexport default function user(state = initState, {type, payload}) {\n  // CHECK NAMESPACE\n  if (type.indexOf(namespace)!==0) return state;\n  type = type.replace(namespace, '');\n\n  if (type === SET_REQUEST_STATUS) {\n    state.request = payload;\n    state.lastRequest = new Date();\n  }\n  if (type === SET_USER){\n    state.user = Object.assign({}, payload);\n  }\n  if (type === SET_USERNAME) {\n    state.username = payload;\n  }\n  if (type === SET_USERFULLNAME) {\n    state.user_full_name = payload;\n  }\n  if (type === REMOVE_USER) {\n    state = initState;\n  }\n  return Object.assign({}, state);\n}\n\nexport const fetchUserData = (username, {light = false, forced = false}) => (dispatch, getState) => new Promise((resolve, reject) => {\n  const {lastRequest, request} = getState().user;\n  if (light && !forced && lastRequest && request===SUCCESS) {\n    throw new Error(ALREADY_FETCHED);\n  }\n  if (lastRequest && !forced &&  new Date().getTime() - lastRequest.getTime() < REQUEST_DELAY ) {\n    throw new Error(DELAY_NOT_PASSED);\n  }\n  dispatch({type: namespace + SET_REQUEST_STATUS, payload: LOADING});\n  client.get('profile?username=' + username).then(({data: user}) => {\n    dispatch({type: namespace + SET_USER, payload: user});\n    dispatch({type: namespace + SET_REQUEST_STATUS, payload: SUCCESS});\n  }).catch(err => {\n    console.log(err);\n    dispatch({type: namespace + SET_REQUEST_STATUS, payload: ERROR});\n    reject(err);\n  })\n});\n\nexport const changePassword = (newPassword) => (dispatch, getState) => new Promise((resolve, reject) => {\n  const username = getState().user.username;\n  console.log({username, newPassword});\n  client.post('changePassword', {username, newPassword}).then((res) => {\n    console.log(res);\n    dispatch({type: namespace + SET_REQUEST_STATUS, payload: SUCCESS});\n    resolve(res);\n  }).catch(err => {\n    console.log(err);\n    dispatch({type: namespace + SET_REQUEST_STATUS, payload: ERROR});\n    reject(err);\n  })\n});\n\n","import axios from \"axios\";\nimport {BAD_CREDENTIALS} from \"../_constants\";\nimport {getBrowserHash} from \"../_helpers/auth-agent\";\n\nfunction generatePassword() {\n  return (10000 + parseInt(Math.random()*10000)).toString().substr(1,4)\n}\n\nexport const mockUser  = {\n  localStorageNaming: 'anketa-mock-user-1',\n  \n  getUsers() {\n    let users = [];\n    try {\n      users = JSON.parse(localStorage.getItem(this.localStorageNaming));\n      if (!users) users = [\n        {\n          id: '77021113438',\n          username: '77021113438',\n          firstName: 'Ербол',\n          lastName: 'Сыздык',\n        },{\n          id: '77000000000',\n          username: '77000000000',\n          firstName: 'Тест',\n          lastName: '1',\n        },{\n          id: '77017862611',\n          username: '77017862611',\n          firstName: 'Алексей',\n          lastName: 'Тестовый',\n        },{\n          id: '77762244555',\n          username: '77762244555',\n          firstName: 'Санжар',\n          lastName: 'Тестовый',\n        },{\n          id: '77089116862',\n          username: '77089116862',\n          firstName: 'Айдар',\n          lastName: 'Тестовый',\n        },{\n          id: '77028715515',\n          username: '77028715515',\n          firstName: 'Данияр',\n          lastName: 'Тестовый',\n        },\n      ];\n    } catch {\n      localStorage.removeItem(this.localStorageNaming);\n      return this.getUsers();\n    }\n    localStorage.setItem(this.localStorageNaming, JSON.stringify(users));\n    return users;\n  },\n  getUser(username) {\n    return this.getUsers().find(user => user.username === username);\n  },\n};\n\nexport const mockAuth = {\n  localStorageNaming: 'anketa-mock-auth',\n  \n  getAuthDatas() {\n    let authData = [];\n    try {\n      authData = JSON.parse(localStorage.getItem(this.localStorageNaming));\n      if (!authData) authData = [];\n    } catch {\n      localStorage.removeItem(this.localStorageNaming);\n      return this.getAuthDatas();\n    }\n    localStorage.setItem(this.localStorageNaming, JSON.stringify(authData));\n    authData = authData.map(a => {\n      a.created = new Date(a.created);\n      return a;\n    });\n    return authData;\n  },\n  getAuthData(username) {\n    return this.getAuthDatas().find(auth => auth.username === username);\n  },\n  setAuthData(username, password) {\n    const datas = this.getAuthDatas();\n    const data = {username, password, created: new Date(), browser: getBrowserHash()};\n    const index = datas.findIndex(data => data.username === username);\n    if (index !== -1) datas[index] = data;\n    else datas.push(data);\n    localStorage.setItem(this.localStorageNaming, JSON.stringify(datas));\n  },\n  sendPassword(username) {\n    return new Promise ((res, rej) => {\n      const user = mockUser.getUser(username);\n      if (!user) {\n        setTimeout(()=>{\n          rej(new Error(BAD_CREDENTIALS))\n        }, 700);\n        return;\n      }\n      const password = generatePassword();\n      const message = encodeURI(`username: ${username}\\ncode: ${password}`);\n      this.setAuthData(username, password);\n      res(axios.get('https://api.telegram.org/bot867600285:AAFZDsmQYhSK5nVzgTqj-Uj6HfhaW-Ul854/sendMessage?chat_id=-373694913&text='+message));\n    });\n  },\n  resendPassword(username) {\n    return new Promise ((res, rej) => {\n      const user = this.getAuthData(username);\n      if (!user) {\n        setTimeout(()=>{\n          rej(new Error(BAD_CREDENTIALS))\n        }, 700);\n        return;\n      }\n      const password = user.password;\n      const message = encodeURI(`username: ${username}\\ncode: ${password}`);\n      this.setAuthData(username, password);\n      res(axios.get('https://api.telegram.org/bot867600285:AAFZDsmQYhSK5nVzgTqj-Uj6HfhaW-Ul854/sendMessage?chat_id=-373694913&text='+message));\n    });\n  },\n  checkPassword(username, password) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        const data = this.getAuthData(username);\n        if (!data || data.password !== password) {\n          rej(new Error(BAD_CREDENTIALS));\n          return;\n        }\n        const user = mockUser.getUser(username);\n        if (!user) {\n          rej(new Error(BAD_CREDENTIALS));\n          return;\n        }\n        res({\n          status: 200,\n          data: {\n            ...user,\n            token_type: 'bearer',\n            access_token: ['JWT_TOKEN',user.username,new Date(new Date() + 1000 * 60 * 30).toISOString()].join(':')\n          }\n        });\n      }, 800);\n    });\n  }\n};\n","export function authHeader() {\n  // return authorization header with jwt token\n  let user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    return { 'Authorization': 'Bearer ' + user.token };\n  } else {\n    return {};\n  }\n}\n\nexport function getBrowserHash() {\n  return window.navigator.userAgent.replace(/\\D+/g, '');\n}\n","import {ADD_PARTNER, CLEAR, PARTNERS, SET_REQUEST_STATUS} from \"../../_types/index\";\n\nconst namespace = PARTNERS;\nconst initState = {\n\trequest: CLEAR,\n\tlist: [],\n}\n\nexport default function partners(state = initState, {type, payload}) {\n\t// CHECK NAMESPACE\n\tif (type.indexOf(namespace)!==0) return state;\n\ttype = type.replace(namespace, '');\n\n\tif (type === SET_REQUEST_STATUS) {\n\t\tstate.request = payload\n\t}\n\tif (type === ADD_PARTNER){\n\t\tstate.list.push(payload)\n\t}\n\treturn state;\n}","import {ADD_CLIENT, CLEAR, CLIENTS, SET_REQUEST_STATUS} from \"../_types/index\";\nimport {ERROR, LOADING, SUCCESS} from \"../_types\";\n\nconst namespace = CLIENTS;\nconst initState = {\n\trequest: CLEAR,\n\tlist: [],\n}\n\nexport default function clients(state = initState, {type, payload}) {\n\t// CHECK NAMESPACE\n\tif (type.indexOf(namespace)!==0) return state;\n\ttype = type.replace(namespace, '');\n\n\tif (type === SET_REQUEST_STATUS) {\n\t\tstate.request = payload\n\t}\n\n\tif (type === ADD_CLIENT){\n\t\tstate.list.push(payload)\n\t}\n\treturn state;\n}\n\n\n\n// ---- ACTIONS ---- //\nexport const addClient = client => dispatch => new Promise((resolve, reject) => {\n\tdispatch({type: namespace + SET_REQUEST_STATUS, payload: LOADING});\n\tsetTimeout(() => {\n\t\tconsole.log(!client.bin);\n\t\tif(client.bin) {\n\t\t\tdispatch({type: namespace + ADD_CLIENT, payload: client});\n\t\t\tdispatch({type: namespace + SET_REQUEST_STATUS, payload: SUCCESS});\n\t\t\tresolve(client);\n\t\t} else {\n\t\t\tdispatch({type: namespace + SET_REQUEST_STATUS, payload: ERROR});\n\t\t\treject(new Error('Some error happened'));\n\t\t}\n\t}, 700);\n});\n","import {\n  FILTER_DAY_TODAY,\n  SORT_CREATED_AT,\n  SORT_DESC,\n  SORT_EDITED_AT, STATUS_DRAFT,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n  STATUS_WRONG,\n} from '../_types'\nimport requestMock from \"./requestMock\";\nimport {isSameDay} from './dates'\n\nconst FIXED_STATUSES = [\n  STATUS_SUCCESS, STATUS_PENDING\n];\n\nexport const mockApplications = {\n  localStorageNaming: 'application_list',\n  generateId(list = []) {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const check = (item) => item.id === text;\n    while(true) {\n      text = \"\";\n      for (let i = 0; i < 15; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      if (!list.find(check)) break;\n    }\n    return text;\n  },\n  fetchApplications({limit=10, offset=0, sortBy=SORT_CREATED_AT, sortOrder=SORT_DESC}, {search='', day='', status=[]}) {\n    return new Promise((resolve) => {\n      requestMock(() => {\n        let applications = this.getApplications();\n        applications = applications.filter(application => {\n          let bool = true;\n          if (search && search !== '') {\n            search = search.toLowerCase();\n            bool = application.name.toLowerCase().indexOf(search)!==-1 ||\n              application.code.split().join('').indexOf(search.split().join(''))!==-1 ||\n              application.contactName.toLowerCase().indexOf(search)!==-1 ||\n              application.phone.toLowerCase().indexOf(search)!==-1 ||\n              application.additionalPhone.toLowerCase().indexOf(search)!==-1;\n          }\n          if (day === FILTER_DAY_TODAY) {\n            bool = bool && isSameDay(application.createdAt);\n          }\n          if (status.length > 0) {\n            bool = bool && status.indexOf(application.status) !== -1;\n          }\n          return bool;\n        });\n        applications.sort((a,b) => {\n          if (sortBy === SORT_CREATED_AT) {\n            return a.createdAt.getTime() - b.createdAt.getTime();\n          } else if (sortBy === SORT_EDITED_AT) {\n            return a.updatedAt.getTime() - b.updatedAt.getTime();\n          }\n          return 1;\n        });\n        if (sortOrder === SORT_DESC) {\n          applications.reverse()\n        }\n        resolve({ applications: applications.slice(offset, offset+limit), total: applications.length})\n      })\n    });\n  },\n  getApplications() {\n    let applications = [];\n    try {\n      applications = JSON.parse(window.localStorage.getItem(this.localStorageNaming));\n      if (!applications) applications = [];\n    } catch (e) {\n      console.error(e);\n      applications = [];\n    }\n    applications.forEach((application, i) => {\n      application.createdAt = new Date(application.createdAt);\n      application.updatedAt = application.updatedAt ? new Date(application.updatedAt) : application.createdAt;\n      if(!application.id) {\n        application.id = this.generateId([]);\n      }\n      const delay = 1000 * 60;\n      if (!application.history) application.history = [];\n      if (!application.status || application.status === STATUS_PENDING) {\n        if ((new Date()).getTime() - application.updatedAt.getTime() > delay) {\n          application.status = Math.random() > .7 ? STATUS_WRONG : STATUS_SUCCESS;\n          application.history.push({\n            status: application.status,\n            time: new Date(),\n            author: 'Карина Олеговна',\n            application: JSON.stringify(application)\n          });\n        }\n      }\n      application.history.forEach(e => {\n        e.time = new Date(e.time);\n      });\n      application.editable = !FIXED_STATUSES.includes(application.status);\n    });\n    window.localStorage.setItem(this.localStorageNaming, JSON.stringify(applications));\n    return applications.slice();\n  },\n  editApplication(id, a, user) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const application = Object.assign({}, a);\n        const applications = this.getApplications();\n        const index = applications.findIndex(ap => ap.id === application.id);\n        if (index===-1) {\n          reject({message: 'Данного объекта не существует, либо он был удален'});\n          return;\n        }\n        if (!applications[index].editable) {\n          reject({message: 'Данный объект не изменяем'});\n          return;\n        }\n        application.updatedAt = new Date();\n        if (application.status !== STATUS_DRAFT) application.status = STATUS_PENDING;\n        application.history.push({\n          status: application.status,\n          time: new Date(),\n          author: user.firstName + ' ' + user.lastName,\n          application: JSON.stringify(application)\n        });\n        application.editable = !FIXED_STATUSES.includes(application.status);\n        applications[index] = application;\n        localStorage.setItem(this.localStorageNaming, JSON.stringify(applications));\n        resolve(application);\n        \n      }, 1000)\n    });\n  },\n  addApplication(a, user) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const application = Object.assign({}, a);\n        const applications = this.getApplications();\n        if (!application.id) application.id = this.generateId(applications);\n        if (!application.createdAt) application.createdAt = new Date();\n        application.updatedAt = new Date();\n        if (application.status !== STATUS_DRAFT) {\n          application.status = STATUS_PENDING;\n        }\n        application.history = [{\n          status: application.status,\n          time: new Date(),\n          author: user.firstName + ' ' + user.lastName,\n          application: {...application}\n        }];\n        application.editable = !FIXED_STATUSES.includes(application.status);\n        applications.push(application);\n        localStorage.setItem(this.localStorageNaming, JSON.stringify(applications));\n        resolve(application);\n      }, 1000);\n    })\n  },\n  removeApplication(a) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const application = Object.assign({}, a);\n        const applications = this.getApplications().slice();\n        const index = applications.findIndex(ap => ap.id === application.id);\n        if (index===-1) {\n          reject({message: 'Данного объекта не существует, либо он уже был удален'});\n          return;\n        }\n        if (!applications[index].editable) {\n          reject({message: 'Невозможно удалить данный объект'});\n          return;\n        }\n        const newApplications = applications.slice();\n        newApplications.splice(index, 1);\n        localStorage.setItem(this.localStorageNaming, JSON.stringify(newApplications));\n        resolve(application);\n      }, 1000)\n    })\n  },\n  getApplication(id) {\n    return this.getApplications().find(a => a.id === id)\n  },\n  fetchApplication(id) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const app = this.getApplication(id);\n        if (app) {\n          resolve(app);\n        } else {\n          reject({message: 'Заявки с заданным id не существует или был удален'})\n        }\n      }, 1000)\n    })\n  }\n};\n\n","import {\n  ADD_APPLICATION, ALREADY_FETCHED,\n  APPLICATIONS,\n  CLEAR,\n  DELAY_NOT_PASSED,\n  REMOVE_APPLICATION,\n  SET_REQUEST_STATUS, SORT_CREATED_AT, SORT_DESC,\n} from '../_types/index'\nimport {\n  EDIT_APPLICATION,\n  ERROR,\n  FETCH_APPLICATIONS,\n  LOADING, SET_FILTERS,\n  SET_LAST_REQUEST, SET_PARAMS,\n  SUCCESS,\n} from '../_types'\nimport {mockApplications} from \"../_helpers/mock-server\";\n\nconst namespace = APPLICATIONS;\nconst REQUEST_DELAY = 6 * 1000;\nconst initState = {\n\trequest: CLEAR,\n\tlastRequest: null,\n\tparams: {\n\t\ttotal: 0,\n\t\tlimit: 10,\n\t\toffset: 0,\n\t\tsortBy: SORT_CREATED_AT,\n\t\tsortOrder: SORT_DESC\n\t},\n\tfilters: {\n\t\tsearch: '',\n\t\tday: '',\n\t\tstatus: []\n\t},\n\tsortBy: null,\n\tlist: [],\n};\n\nexport default function applications(state = initState, {type, payload}) {\n\t// CHECK NAMESPACE\n\tif (type.indexOf(namespace)!==0) return state;\n\ttype = type.replace(namespace, '');\n\n\tif (type === SET_LAST_REQUEST) {\n\t\tstate.lastRequest = new Date();\n\t}\n\tif (type === SET_REQUEST_STATUS) {\n\t\tstate.request = payload;\n\t}\n\n\tif (type === FETCH_APPLICATIONS) {\n\t\tstate.list = payload;\n\t}\n\tif (type === SET_PARAMS) {\n\t\tstate.params = {...state.params, ...payload};\n\t}\n\tif (type === SET_FILTERS) {\n\t\tstate.filters = {...state.filters, ...payload};\n\t}\n\t\n\tif (type === ADD_APPLICATION){\n\t\tstate.list = [payload, ...state.list];\n\t}\n\n\tif (type === EDIT_APPLICATION){\n\t\tconst index = state.list.findIndex(a => a.id === payload.id);\n\t\tstate.list[index] = payload;\n\t}\n\n\tif (type === REMOVE_APPLICATION) {\n\t\tconst index = state.list.findIndex(v => v.id === payload);\n\t\tconst newList = state.list.slice();\n\t\tnewList.splice(index, 1);\n\t\tstate.list = newList.slice();\n\t}\n\treturn Object.assign({}, state);\n}\n\n\n// ---- ACTIONS ---- //\nexport const addApplication = (application, user) => dispatch => new Promise((resolve, reject) => {\n\tdispatch({type: namespace + SET_REQUEST_STATUS, payload: LOADING});\n \n\tlet promise;\n\tif (application.id) {\n    promise = mockApplications.editApplication(application.id, application, user).then(application => {\n      dispatch({type: namespace + EDIT_APPLICATION, payload: application});\n      return application;\n    });\n  } else {\n    promise = mockApplications.addApplication(application, user).then((application) => {\n      dispatch({type: namespace + ADD_APPLICATION, payload: application});\n      return application;\n    });\n  }\n  promise.then(application => {\n    dispatch({type: namespace + SET_REQUEST_STATUS, payload: SUCCESS});\n    resolve(application);\n  }).catch(err => {\n    dispatch({type: namespace + SET_REQUEST_STATUS, payload: ERROR});\n    reject(err);\n  })\n});\n\nexport const removeApplication = application => dispatch => new Promise((resolve, reject) => {\n\tmockApplications.removeApplication(application).then(app => {\n\t\tdispatch({type: namespace + REMOVE_APPLICATION, payload: app.id});\n\t\tresolve(app.id);\n\t}).catch((err) => {\n\t\tdispatch({type: namespace + SET_REQUEST_STATUS, payload: ERROR});\n\t\treject(err.message);\n\t})\n});\n\nexport const getApplications = ({light, forced, silent} = {light: false, forced: false, silent: false}) => (dispatch, getState) => new Promise((resolve, reject) => {\n  const {lastRequest, request, params, filters} = getState().applications;\n  if (light && !forced && lastRequest && request===SUCCESS) {\n    reject({message: ALREADY_FETCHED});\n    return;\n  }if (lastRequest && !forced &&  new Date().getTime() - lastRequest.getTime() < REQUEST_DELAY ) {\n\t\treject({message: DELAY_NOT_PASSED, data: lastRequest});\n\t\treturn;\n\t}\n\tif(!silent) dispatch({type: namespace + SET_REQUEST_STATUS, payload: LOADING});\n\treturn mockApplications.fetchApplications(params, filters).then(({applications, total}) => {\n\t\tdispatch({type: namespace + FETCH_APPLICATIONS, payload: applications.slice()});\n\t\tdispatch({type: namespace + SET_PARAMS, payload: {total}});\n\t\tif(!silent)dispatch({type: namespace + SET_REQUEST_STATUS, payload: SUCCESS});\n\t\tdispatch({type: namespace + SET_LAST_REQUEST});\n\t\tresolve({applications: applications.slice(), total})\n\t}).catch(err => {\n\t\tif(!silent)dispatch({type: namespace + SET_REQUEST_STATUS, payload: ERROR});\n\t\treject(err);\n\t})\n});\n","import {AUTH,SET_AUTH,UNSET_AUTH} from '../_types'\n\nconst namespace = AUTH;\nconst initState = {\n  authenticated: !!localStorage.getItem('user')\n}\n\nexport default function auth(state = initState, {type, payload}) {\n  // CHECK NAMESPACE\n  if (type.indexOf(namespace)!==0) return state;\n  type = type.replace(namespace, '');\n\n  if (type === SET_AUTH){\n    state.authenticated = true;\n  }\n  if (type === UNSET_AUTH) {\n    state.authenticated = false;\n  }\n  return Object.assign({}, state);\n}","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport partners from \"./partners/index\";\nimport clients from \"./clients\";\nimport notices from \"./notices\";\nimport applications from \"./applications\";\nimport auth from './auth'\nimport user from './user'\n\nconst reducers = combineReducers({\n\trouting: routerReducer,\n  notices,\n\tpartners,\n\tclients,\n\tapplications,\n\tuser,\n\tauth\n});\n\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n"],"sourceRoot":""}
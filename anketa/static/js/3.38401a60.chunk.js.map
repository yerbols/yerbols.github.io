{"version":3,"sources":["pages/DashboardPage/DashboardMenu.js","pages/DashboardPage/DashboardHeader.js","pages/DashboardPage/DashboardPage.js"],"names":["withRouter","connect","state","clientType","accountForm","_ref","_ref$routes","routes","props","Object","objectWithoutProperties","routeByRouter","e","preventDefault","route","currentTarget","getAttribute","activeRoute","history","push","navs","toConsumableArray","addCompanyTabs","filter","tab","acceptFor","indexOf","location","pathname","react_default","a","createElement","application_menu_default","assign","theme","r","onNav","map","_ref2","path","label","_ref2$isExact","isExact","navOptions","application_menu_item_default","checked","onClick","url","key","label_default","className","application_menu_group_default","title","isExpanded","_ref3","isSubItem","username","user","user_full_name","_ref$username","concat","user_default","text","icon","person_default","size","NavLink","to","settings_default","logout_default","AddOrder","lazy","__webpack_require__","then","bind","dispatch","getUser","fetchUserData","light","forced","lifecycle","componentDidMount","component","access","add_default","defaultReroute","page_default","header","header_default","menu","DashboardPage_DashboardMenu","rightContent","DashboardPage_DashboardHeader","footer","footer_default","copyright","Switch","Route","exact","LazyComponent","Redirect","from"],"mappings":"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","file":"static/js/3.38401a60.chunk.js","sourcesContent":["import React from 'react';\nimport ApplicationMenu from \"arui-private/application-menu\";\nimport ApplicationMenuItem from \"arui-private/application-menu-item\";\nimport {withRouter} from \"react-router-dom\";\nimport Label from \"arui-feather/label\";\nimport ApplicationMenuGroup from \"arui-private/application-menu-group\";\nimport {addCompanyTabs} from \"../../_store/accountForm\";\nimport {connect} from \"react-redux\";\n\nconst DashboardMenu = ({routes=[], clientType, ...props}) => {\n\t\n\tconst routeByRouter = (e) => {\n\t\t\n\t\te.preventDefault();\n\t\tconst route = e.currentTarget.getAttribute('href');\n\t\tif (activeRoute !== route) {\n\t\t\tprops.history.push(route);\n\t\t}\n\t};\n\t\n\tconst navs = [...addCompanyTabs].filter(tab => tab.acceptFor.indexOf(clientType) !== -1);\n\tconst activeRoute = props.history.location.pathname;\n\t// const activeIndex = navs.findIndex(nav => nav.url === activeRoute);\n\t\n\treturn (\n\t\t<ApplicationMenu theme=\"alfa-on-color\" {...props}>\n\t\t\t{ routes.filter(r => r.onNav).map(\n\t\t\t\t({path, label, isExact=false, navOptions}) =>\n\t\t\t\t\t<ApplicationMenuItem\n\t\t\t\t\t\tchecked={((activeRoute.indexOf(path) === 0 && !isExact) || (activeRoute === path && isExact)) && activeRoute.indexOf('dashboard/add/company') === -1}\n\t\t\t\t\t\tonClick={routeByRouter}\n\t\t\t\t\t\turl={path} key={path}\n\t\t\t\t\t\t{...navOptions}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Label className=\"mr-auto\">{label}</Label>\n\t\t\t\t\t</ApplicationMenuItem>\n\t\t\t)}\n\t\t\t{\n\t\t\t\tactiveRoute.indexOf('dashboard/add/company') !== -1 &&\n\t\t\t\t<ApplicationMenuGroup title=\"Новая компания\" isExpanded checked>\n\t\t\t\t\t{navs.map(({label, url}) => (\n\t\t\t\t\t\t<ApplicationMenuItem onClick={routeByRouter}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // disabled={index>activeIndex && !access}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t key={url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t isSubItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t url={url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t checked={activeRoute === url}\n\t\t\t\t\t\t>{label}</ApplicationMenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</ApplicationMenuGroup>\n\t\t\t}\n\t\t</ApplicationMenu>\n\t)\n};\n\n\nconst mapStateToProps = (state) => ({\n\tclientType: state.accountForm.clientType\n});\n\nexport default withRouter(connect(mapStateToProps)(DashboardMenu));\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport UserIcon from 'arui-feather/icon/entity/person'\nimport SettingsIcon from 'arui-feather/icon/action/settings'\nimport LogoutIcon from 'arui-feather/icon/action/logout'\nimport {NavLink} from 'react-router-dom'\nimport User from 'arui-private/user';\n\nconst DashboardHeader = ({username=\"Загрузка\", className}) => {\n  \n  return (\n    <div className={`dashboard-header ${className}`}>\n      <div className=\"d-flex align-items-center justify-content-end flex-nowrap\">\n        <User text={username} icon={<UserIcon size=\"m\"/>} className=\"mr-4\"/>\n        <NavLink to=\"/dashboard/settings\" className=\"mr-4\" title=\"Настройки\">\n          <SettingsIcon size=\"m\"/>\n        </NavLink>\n        <NavLink to=\"/logout\" title=\"Выход\">\n          <LogoutIcon size=\"m\"/>\n        </NavLink>\n      </div>\n    </div>\n  )\n};\n\nexport default connect(\n  state => ({\n    username: state.user.user_full_name\n  })\n)(DashboardHeader);\n","import React, {lazy} from 'react';\nimport './DashboardPage.css';\nimport lifecycle from 'react-pure-lifecycle';\nimport DashboardMenu from \"./DashboardMenu\";\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport DashboardHeader from './DashboardHeader';\nimport LazyComponent from '../../components/LazyComponent';\nimport {fetchUserData} from '../../_store/user';\nimport Header from \"arui-private/header\";\nimport Page from \"arui-private/page\";\nimport {connect} from \"react-redux\";\nimport Footer from \"arui-private/footer\";\nimport Label from \"arui-feather/label\";\nimport PlusIcon from \"arui-feather/icon/action/add\";\n// const CompanyList  = lazy( () => import('../CompanyList/CompanyList'));\nconst AddOrder  = lazy( () => import('../AddOrder/AddOrder'));\n\nconst DashboardPage = () => {\n\n\tconst routes = [\n\t\t// { path: '/dashboard/orders', onNav: true, label: 'Мои компании', component: CompanyList, access: true, isExact: true },\n\t\t{ path: '/dashboard/add', onNav: true, label: 'Добавить', component: AddOrder, access: true, isExact: false, navOptions: {icon: <PlusIcon/>}, },\n\t];\n\tconst defaultReroute = routes[0].path;\n\treturn (\n\t\t<div className=\"dashboard-body\">\n\t\t\t<Page\n\t\t\t\theader={\n\t\t\t\t\t<Header\n\t\t\t\t\t\tmenu={<DashboardMenu routes={routes}/>}\n\t\t\t\t\t\trightContent={<DashboardHeader/>}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tfooter={\n\t\t\t\t\t<Footer copyright={<Label size=\"s\" className=\"opacity-middle\">© 2001-2019 Альфа-Банк</Label>}/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<div className=\"dashboard-content container px-4\">\n\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\troutes.filter(r => r.access).map(r => <Route path={r.path} exact={r.isExact} key={r.path} component={LazyComponent(r.component)}/>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<Redirect from=\"/\" to={defaultReroute}/>\n\t\t\t\t\t\t\t<Redirect from=\"*\" to=\"/404\"/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</div>\n\t)\n};\n\nconst mapStateToProps = state => ({\n\tuser: state.user,\n\tusername: state.user.username,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tgetUser: username => dispatch(fetchUserData(username, {light: true, forced: true})),\n});\n\nconst methods = {\n\tcomponentDidMount(props) {\n\t\tprops.getUser();\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(lifecycle(methods)(DashboardPage)));\n"],"sourceRoot":""}